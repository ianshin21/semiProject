CREATE USER SEMIPROJECT IDENTIFIED BY SEMI;
GRANT RESOURCE, CONNECT TO SEMIPROJECT;


---------------------------------------------
--MEMBER 테이블 
--------------------------------------------

CREATE TABLE MEMBER (
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEMBER_PWD VARCHAR2(20) NOT NULL,
    MEMBER_ROLE VARCHAR2 (10) DEFAULT 'ROLE_USER', -- 관리자, 사용자
    MEMBER_NAME VARCHAR2(20) NOT NULL, 
    NICKNAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(100),
    ADDRESS VARCHAR2(100),
    TRUTH_GRADE NUMBER DEFAULT 0,
    MEMBER_GRADE NUMBER DEFAULT 0,
    MEMBER_PROFILE VARCHAR2(50) DEFAULT '신입 판매원',
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_ROLE IS '회원타입';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.NICKNAME IS '회원닉네임';
COMMENT ON COLUMN MEMBER.PHONE IS '회원전화';
COMMENT ON COLUMN MEMBER.EMAIL IS '회원이메일';
COMMENT ON COLUMN MEMBER.ADDRESS IS '회원 주소';
COMMENT ON COLUMN MEMBER.TRUTH_GRADE IS '회원신뢰도';
COMMENT ON COLUMN MEMBER.MEMBER_GRADE IS '회원등급';
COMMENT ON COLUMN MEMBER.MEMBER_PROFILE IS '회원프로필';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_UNO;

SELECT * FROM MEMBER;

INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, 'kdm8939', '1234', 'ROLE_USER', '김동민', '떵민', '01099828939', 'kdm8939@naver.com', '서울시송파구', DEFAULT, DEFAULT, DEFAULT, DEFAULT);

-- INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, ?, ?, 'ROLE_USER', ?, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT, DEFAULT);

INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, 'admin', '1234', 'ROLE_ADMIN', '관리자', '관리자', '010-1234-5678', 'admin@iei.or.kr', '서울시 강남구 역삼동', NULL, NULL, '이달의 판매왕', DEFAULT
);

UPDATE MEMBER SET NICKNAME='떵민', PHONE='01099828939', EMAIL='kdm8939@naver.com', ADDRESS='서울시 송파구' WHERE MEMBER_ID='kdm8939';


--------------------------------------------
--PRODUCT_REGISTRY 테이블 

CREATE TABLE PRODUCT_REGISTRY (
    PRODUCT_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_METHOD VARCHAR2(50), -- 상품거래방식
    PRODUCT_STATE VARCHAR2(50),  -- 상품 상태
    PRODUCT_PICTURE_URL VARCHAR2(50) NOT NULL, 
    PRODUCT_TEXT VARCHAR2(500) NOT NULL,
    VISIT_COUNT NUMBER DEFAULT 0,
    UPLOAD_DATE DATE DEFAULT SYSDATE,
    TRADE_AREA VARCHAR2(100),
    LIKE_COUNT NUMBER DEFAULT 0
); 

COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_METHOD IS '상품거래방식';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_STATE IS '상품 상태';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_TEXT IS '상품설명';
COMMENT ON COLUMN PRODUCT_REGISTRY.VISIT_COUNT IS '상품조회수';
COMMENT ON COLUMN PRODUCT_REGISTRY.UPLOAD_DATE IS '상품등록날짜';
COMMENT ON COLUMN PRODUCT_REGISTRY.TRADE_AREA IS '거래지역';
COMMENT ON COLUMN PRODUCT_REGISTRY.LIKE_COUNT IS '찜개수';

CREATE SEQUENCE SEQ_PNO;

INSERT INTO PRODUCT_REGISTRY 
VALUES(SEQ_PNO.NEXTVAL, 'TICO-1990', 500, '배송', '상', 'https://fonts.google.com', 
    '엔틱한 빈티지', DEFAULT, SYSDATE, '서울시 강남구 역삼동', DEFAULT
);


SELECT * FROM PRODUCT_REGISTRY;
DROP TABLE PRODUCT_REGISTRY;
--------------------------------------------
--GROUP_PURCHASE_REGISTRY 테이블 

CREATE TABLE GROUP_PURCHASE_REGISTRY (
    G_PRODUCT_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_PICTURE_URL VARCHAR2(50) NOT NULL, 
    PRODUCT_TEXT VARCHAR2(500) NOT NULL,
    VISIT_COUNT NUMBER DEFAULT 0,
    UPLOAD_DATE DATE DEFAULT SYSDATE,
    TRADE_AREA VARCHAR2(100),
    LIKE_COUNT NUMBER DEFAULT 0,
    QUANTITY NUMBER NOT NULL,
    END_DATE DATE
);

COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.G_PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_TEXT IS '상품설명';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.VISIT_COUNT IS '상품조회수';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.UPLOAD_DATE IS '상품등록날짜';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.TRADE_AREA IS '거래지역';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.LIKE_COUNT IS '찜개수';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.QUANTITY IS '수량';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.END_DATE IS '공구종료';

CREATE SEQUENCE SEQ_GPNO;

INSERT INTO GROUP_PURCHASE_REGISTRY 
VALUES(SEQ_GPNO.NEXTVAL, 'WATERMELON', 5000, 'https://fonts.google.com', 
    '시원하게 한 입', DEFAULT, SYSDATE, '서울시 강남구 역삼동', DEFAULT, 1000, '21/01/30'
);

--------------------------------------------
-- ORDER_HISTORY  테이블

CREATE TABLE ORDER_HISTORY (
    ORDER_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_PICTURE_URL VARCHAR2(50) NOT NULL, 
    ORDER_DATE DATE DEFAULT SYSDATE,
    PURCHASE_OR_SALE VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN ORDER_HISTORY.ORDER_NO IS '주문번호';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN ORDER_HISTORY.ORDER_DATE IS '주문판매일';
COMMENT ON COLUMN ORDER_HISTORY.PURCHASE_OR_SALE IS '구매/판매구분';

CREATE SEQUENCE SEQ_ONO;

INSERT INTO ORDER_HISTORY 
VALUES(SEQ_ONO.NEXTVAL, 'WATERMELON', 5000, 'https://fonts.google.com', SYSDATE, '구매');


--------------------------------------------
-- COMMUNITY_BOARD  테이블

CREATE TABLE COMMUNITY_BOARD (
    CONTENT_NO NUMBER,
    WRITER_NO NUMBER, 
    TITLE VARCHAR2(500) NOT NULL, 
    BOARD_CONTENT VARCHAR2(2000) NOT NULL,
    FILENAME VARCHAR2(100),
    MAKE_DATE DATE DEFAULT SYSDATE,
    VISIT_COUNT NUMBER DEFAULT 0, 
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    CONSTRAINT PK_CONTENT_NO PRIMARY KEY(CONTENT_NO),
    CONSTRAINT FK_WRITER FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE SET NULL
);

COMMENT ON COLUMN COMMUNITY_BOARD.CONTENT_NO IS '게시글번호';
COMMENT ON COLUMN COMMUNITY_BOARD.WRITER_NO IS '작성자';
COMMENT ON COLUMN COMMUNITY_BOARD.TITLE IS '제목';
COMMENT ON COLUMN COMMUNITY_BOARD.BOARD_CONTENT IS '내용';
COMMENT ON COLUMN COMMUNITY_BOARD.FILENAME IS '파일이름';
COMMENT ON COLUMN COMMUNITY_BOARD.MAKE_DATE IS '작성일';
COMMENT ON COLUMN COMMUNITY_BOARD.VISIT_COUNT IS '조회수';
COMMENT ON COLUMN COMMUNITY_BOARD.STATUS IS '상태값';


CREATE SEQUENCE SEQ_BNO;

INSERT INTO COMMUNITY_BOARD 
VALUES(SEQ_BNO.NEXTVAL, 22, '빠른 배송에 감사드리며', '눈이 내리네 불펜 전력을 강화해야겠다고 생각한 SK는...', NULL, SYSDATE, DEFAULT, DEFAULT);

DROP TABLE COMMUNITY_BOARD;

--------------------------------------------
-- COMMENT_LIST  테이블

CREATE TABLE COMMENT_LIST (
    COMMENT_NO NUMBER PRIMARY KEY,
    CONTENT VARCHAR2(500) NOT NULL,
    WRITE_TIME DATE DEFAULT SYSDATE
);

COMMENT ON COLUMN COMMENT_LIST.COMMENT_NO IS '댓글번호';
COMMENT ON COLUMN COMMENT_LIST.CONTENT IS '내용';
COMMENT ON COLUMN COMMENT_LIST.WRITE_TIME IS '생성일시';

CREATE SEQUENCE SEQ_CNO;

INSERT INTO COMMENT_LIST 
VALUES(SEQ_CNO.NEXTVAL, '감사에 감사 드려요~~~', SYSDATE);


--------------------------------------------------
-- FILE  테이블

CREATE TABLE UPLOAD_FILE (
    FILE_NO NUMBER PRIMARY KEY,
    FILE_NAME VARCHAR2(50) NOT NULL,
    FILE_TYPE VARCHAR2(20)
);

COMMENT ON COLUMN UPLOAD_FILE.FILE_NO IS '파일번호';
COMMENT ON COLUMN UPLOAD_FILE.FILE_NAME IS '파일이름';
COMMENT ON COLUMN UPLOAD_FILE.FILE_TYPE IS '파일타입';

CREATE SEQUENCE SEQ_FNO;

INSERT INTO UPLOAD_FILE 
VALUES(SEQ_FNO.NEXTVAL, '2월 공동구매 물품 목록', 'PDF');

COMMIT;

---------------------------------------------
--------------------------------------------------



--MEMBER 테이블

CREATE TABLE MEMBER (
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEMBER_PWD VARCHAR2(20) NOT NULL,
    MEMBER_ROLE VARCHAR2 (10) DEFAULT 'ROLE_USER', -- 관리자, 사용자
    MEMBER_NAME VARCHAR2(20) NOT NULL, 
    NICKNAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(15),
    EMAIL VARCHAR2(100),
    ADDRESS VARCHAR2(100),
    TRUTH_GRADE NUMBER DEFAULT 0,
    MEMBER_GRADE NUMBER DEFAULT 0,
    MEMBER_PROFILE VARCHAR2(50) DEFAULT '신입 판매원',
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);
SELECT * FROM MEMBER;

DROP TABLE MEMBER; -- 멤버 테이블 삭제

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_ROLE IS '회원타입';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.NICKNAME IS '회원닉네임';
COMMENT ON COLUMN MEMBER.PHONE IS '회원전화';
COMMENT ON COLUMN MEMBER.EMAIL IS '회원이메일';
COMMENT ON COLUMN MEMBER.ADDRESS IS '회원 주소';
COMMENT ON COLUMN MEMBER.TRUTH_GRADE IS '회원신뢰도';
COMMENT ON COLUMN MEMBER.MEMBER_GRADE IS '회원등급';
COMMENT ON COLUMN MEMBER.MEMBER_PROFILE IS '회원프로필';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_UNO;


INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, 'kdm8939', '1234', 'ROLE_USER', '김동민', '떵민', '01099828939', 'kdm8939@naver.com', '서울시송파구', DEFAULT, DEFAULT, DEFAULT, DEFAULT);
SELECT * FROM MEMBER;
-- INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, ?, ?, 'ROLE_USER', ?, ?, ?, ?, ?, DEFAULT, DEFAULT, DEFAULT, DEFAULT);

INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL, 'admin', '1234', 'ROLE_ADMIN', '관리자', '관리자', '010-1234-5678', 'admin@iei.or.kr', '서울시 강남구 역삼동', NULL, NULL, '이달의 판매왕', DEFAULT
);


------------------------------------------------------------------------
--PRODUCT_REGISTRY 테이블 
DROP TABLE PRODUCT_REGISTRY;


CREATE TABLE PRODUCT_REGISTRY (

    PRODUCT_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_WRITER VARCHAR2(50)NOT NULL, -- 작성자
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_METHOD VARCHAR2(50), -- 상품거래방식
    PRODUCT_STATE VARCHAR2(50),  -- 상품 상태
    PRODUCT_PICTURE_URL VARCHAR2(50), 
    PRODUCT_TEXT VARCHAR2(500) NOT NULL,
    VISIT_COUNT NUMBER DEFAULT 0,
    UPLOAD_DATE DATE DEFAULT SYSDATE,
    TRADE_AREA VARCHAR2(100),
    LIKE_COUNT NUMBER DEFAULT 0,
      STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CONSTRAINT FK_BOARD_WRITER FOREIGN KEY(PRODUCT_WRITER) REFERENCES MEMBER(MEMBER_ID) ON DELETE SET NULL
    
); 

--ALTER TABLE PRODUCT_REGISTRY
--DROP CONSTRAINT FK_BOARD_WRITER;


COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_WRITER IS '상품작성자';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_METHOD IS '상품거래방식';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_STATE IS '상품 상태';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN PRODUCT_REGISTRY.PRODUCT_TEXT IS '상품설명';
COMMENT ON COLUMN PRODUCT_REGISTRY.VISIT_COUNT IS '상품조회수';
COMMENT ON COLUMN PRODUCT_REGISTRY.UPLOAD_DATE IS '상품등록날짜';
COMMENT ON COLUMN PRODUCT_REGISTRY.TRADE_AREA IS '거래지역';
COMMENT ON COLUMN PRODUCT_REGISTRY.LIKE_COUNT IS '찜개수';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_PNO;

INSERT INTO PRODUCT_REGISTRY 
VALUES(SEQ_PNO.NEXTVAL, 'TICO-1990','kdm8939', 500, '배송', '상', 'https://fonts.google.com', 
    '엔틱한 빈티지', DEFAULT, SYSDATE, '서울시 강남구 역삼동', DEFAULT,'N'
);


SELECT * FROM PRODUCT_REGISTRY;
DROP TABLE PRODUCT_REGISTRY;


-----------------------------------------------------------------------
-- GROUP_PURCHASE_REGISTRY 테이블

CREATE TABLE GROUP_PURCHASE_REGISTRY (
    G_PRODUCT_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_PICTURE_URL VARCHAR2(50) NOT NULL, 
    PRODUCT_TEXT VARCHAR2(500) NOT NULL,
    VISIT_COUNT NUMBER DEFAULT 0,
    UPLOAD_DATE DATE DEFAULT SYSDATE,
    TRADE_AREA VARCHAR2(100),
    LIKE_COUNT NUMBER DEFAULT 0,
    QUANTITY NUMBER NOT NULL,
    END_DATE DATE
);

COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.G_PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.PRODUCT_TEXT IS '상품설명';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.VISIT_COUNT IS '상품조회수';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.UPLOAD_DATE IS '상품등록날짜';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.TRADE_AREA IS '거래지역';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.LIKE_COUNT IS '찜개수';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.QUANTITY IS '수량';
COMMENT ON COLUMN GROUP_PURCHASE_REGISTRY.END_DATE IS '공구종료';

CREATE SEQUENCE SEQ_GPNO;

INSERT INTO GROUP_PURCHASE_REGISTRY 
VALUES(SEQ_GPNO.NEXTVAL, 'WATERMELON', 5000, 'https://fonts.google.com', 
    '시원하게 한 입', DEFAULT, SYSDATE, '서울시 강남구 역삼동', DEFAULT, 1000, '21/01/30'
);


-------------------------------------------------------------------------
-- ORDER_HISTORY 테이블

CREATE TABLE ORDER_HISTORY (
    ORDER_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(50) NOT NULL, 
    PRODUCT_PRICE NUMBER NOT NULL,
    PRODUCT_PICTURE_URL VARCHAR2(50) NOT NULL, 
    ORDER_DATE DATE DEFAULT SYSDATE,
    PURCHASE_OR_SALE VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN ORDER_HISTORY.ORDER_NO IS '주문번호';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_NAME IS '상품이름';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN ORDER_HISTORY.PRODUCT_PICTURE_URL IS '상품사진';
COMMENT ON COLUMN ORDER_HISTORY.ORDER_DATE IS '주문판매일';
COMMENT ON COLUMN ORDER_HISTORY.PURCHASE_OR_SALE IS '구매/판매구분';

CREATE SEQUENCE SEQ_ONO;

INSERT INTO ORDER_HISTORY 
VALUES(SEQ_ONO.NEXTVAL, 'WATERMELON', 5000, 'https://fonts.google.com', SYSDATE, '구매');


----------------------------------------------------------------------------
--COMMUNITY_BOARD 테이블

CREATE TABLE COMMUNITY_BOARD (
    CONTENT_NO NUMBER,
    WRITER_NO NUMBER, 
    TITLE VARCHAR2(500) NOT NULL, 
    BOARD_CONTENT VARCHAR2(2000) NOT NULL,
    FILENAME VARCHAR2(100),
    MAKE_DATE DATE DEFAULT SYSDATE,
    VISIT_COUNT NUMBER DEFAULT 0, 
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    RENAME_FILENAME VARCHAR2(100),
    AGE NUMBER,
    REPORT VARCHAR2(1) DEFAULT 'N' CHECK (REPORT IN('Y', 'N')),
    CONSTRAINT PK_CONTENT_NO PRIMARY KEY(CONTENT_NO),
    CONSTRAINT FK_WRITER FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE SET NULL
);

COMMENT ON COLUMN COMMUNITY_BOARD.CONTENT_NO IS '게시글번호';
COMMENT ON COLUMN COMMUNITY_BOARD.WRITER_NO IS '작성자';
COMMENT ON COLUMN COMMUNITY_BOARD.TITLE IS '제목';
COMMENT ON COLUMN COMMUNITY_BOARD.BOARD_CONTENT IS '내용';
COMMENT ON COLUMN COMMUNITY_BOARD.FILENAME IS '파일이름';
COMMENT ON COLUMN COMMUNITY_BOARD.MAKE_DATE IS '작성일';
COMMENT ON COLUMN COMMUNITY_BOARD.VISIT_COUNT IS '조회수';
COMMENT ON COLUMN COMMUNITY_BOARD.STATUS IS '상태값';
COMMENT ON COLUMN COMMUNITY_BOARD.RENAME_FILENAME IS '파일리네임';
COMMENT ON COLUMN COMMUNITY_BOARD.AGE IS '나이대';
COMMENT ON COLUMN COMMUNITY_BOARD.REPORT IS '신고상태';

CREATE SEQUENCE SEQ_BNO;

COMMIT;


-------------------------------------------------------------------------------
-- 커뮤니티 댓글 테이블

CREATE TABLE REPLY(
  REPLY_NO NUMBER PRIMARY KEY,
  BOARD_NO NUMBER,
  REPLY_WRITER_NO NUMBER,
  REPLY_CONTENT VARCHAR2(400),
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  REPLY_CREATE_DATE DATE,
  REPLY_MODIFY_DATE DATE,
  AGE NUMBER,
  FOREIGN KEY (BOARD_NO) REFERENCES COMMUNITY_BOARD,
  FOREIGN KEY (REPLY_WRITER_NO) REFERENCES MEMBER
);

CREATE SEQUENCE SEQ_REPLY_NO;

COMMENT ON COLUMN "REPLY"."REPLY_NO" IS '댓글번호';
COMMENT ON COLUMN "REPLY"."BOARD_NO" IS '댓글이작성된게시글';
COMMENT ON COLUMN "REPLY"."REPLY_WRITER_NO" IS '댓글작성자';
COMMENT ON COLUMN "REPLY"."REPLY_CONTENT" IS '댓글내용';
COMMENT ON COLUMN "REPLY"."STATUS" IS '상태값(Y/N)';
COMMENT ON COLUMN "REPLY"."REPLY_CREATE_DATE" IS '댓글올린날짜';
COMMENT ON COLUMN "REPLY"."REPLY_MODIFY_DATE" IS '댓글수정날짜';

COMMIT;


--------------------------------------------------------------------
--COMMENT_LIST 테이블

CREATE TABLE COMMENT_LIST (
    COMMENT_NO NUMBER PRIMARY KEY,
    PRODUCT_NO NUMBER,
    COMMENT_WRITER_NO NUMBER,
    --  COMMENT_WRITER VARCHAR2(50),
    CONTENT VARCHAR2(500) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
    WRITE_TIME DATE DEFAULT SYSDATE,
   FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT_REGISTRY,
  FOREIGN KEY (COMMENT_WRITER_NO) REFERENCES MEMBER
);

COMMENT ON COLUMN COMMENT_LIST.COMMENT_NO IS '댓글번호';
COMMENT ON COLUMN COMMENT_LIST.CONTENT IS '내용';
COMMENT ON COLUMN COMMENT_LIST.WRITE_TIME IS '생성일시';

CREATE SEQUENCE SEQ_CNO;

INSERT INTO COMMENT_LIST 
VALUES(SEQ_CNO.NEXTVAL, '감사에 감사 드려요~~~', SYSDATE);

-----------------------------------------------------------------
--FILE 테이블


CREATE TABLE UPLOAD_FILE (
    FILE_NO NUMBER PRIMARY KEY,
    FILE_NAME VARCHAR2(50) NOT NULL,
    FILE_TYPE VARCHAR2(20)
);

COMMENT ON COLUMN UPLOAD_FILE.FILE_NO IS '파일번호';
COMMENT ON COLUMN UPLOAD_FILE.FILE_NAME IS '파일이름';
COMMENT ON COLUMN UPLOAD_FILE.FILE_TYPE IS '파일타입';

CREATE SEQUENCE SEQ_FNO;

INSERT INTO UPLOAD_FILE 
VALUES(SEQ_FNO.NEXTVAL, '2월 공동구매 물품 목록', 'PDF');

COMMIT;


--------------------------------------------------------------------
--CUSTOMER_SERVICE 테이블

CREATE TABLE CUSTOMER_SERVICE (
    CS_NO NUMBER,
    CS_WRITER_NO NUMBER,
    CS_TITLE VARCHAR2(50),
    CS_CONTENT VARCHAR2(500),
    CS_COUNT NUMBER DEFAULT 0,
    CS_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT PK_CS_NO PRIMARY KEY(CS_NO),
    CONSTRAINT FK_CS_WRITER FOREIGN KEY(CS_WRITER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE SET NULL
);

COMMENT ON COLUMN CUSTOMER_SERVICE.CS_NO IS '게시글번호';
COMMENT ON COLUMN CUSTOMER_SERVICE.CS_WRITER_NO IS '게시글작성자';
COMMENT ON COLUMN CUSTOMER_SERVICE.CS_TITLE IS '게시글제목';
COMMENT ON COLUMN CUSTOMER_SERVICE.CS_CONTENT IS '게시글내용';
COMMENT ON COLUMN CUSTOMER_SERVICE.CS_COUNT IS '조회수';
COMMENT ON COLUMN CUSTOMER_SERVICE.CS_DATE IS '작성일';

CREATE SEQUENCE SEQ_CS START WITH 1 INCREMENT BY 1;

COMMIT;


--------------------------------------------------------------------
--CS_REPLY 테이블

CREATE TABLE CS_REPLY (
    REPLY_NO NUMBER PRIMARY KEY,
    CS_NO NUMBER,
    REPLY_WRITER_NO NUMBER,
    REPLY_CONTENT VARCHAR2(400),
    REPLY_DATE DATE,
    FOREIGN KEY (CS_NO) REFERENCES CUSTOMER_SERVICE,
    FOREIGN KEY (REPLY_WRITER_NO) REFERENCES MEMBER
);

CREATE SEQUENCE SEQ_CS_REPLY_NO;

COMMENT ON COLUMN CS_REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN CS_REPLY.CS_NO IS '댓글이작성된게시글';
COMMENT ON COLUMN CS_REPLY.REPLY_WRITER_NO IS '댓글작성자';
COMMENT ON COLUMN CS_REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN CS_REPLY.REPLY_DATE IS '댓글날짜';

COMMIT;